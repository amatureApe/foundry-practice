{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreateContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreatePersistentContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "123:2395:19:-:0;;;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;-1:-1:-1;;;534:31:19;;216:2:21;534:31:19;198:21:21;255:2;235:18;228:30;-1:-1:-1;;;274:18:21;267:45;534:12:19;;329:18:21;534:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;534:31:19;;;;;;;;;;;;:::i;:::-;509:56;;;;;;;;;;;;:::i;:::-;-1:-1:-1;597:32:19;;-1:-1:-1;;;597:32:19;;1784:2:21;597:32:19;;;1766:21:21;1823:2;1803:18;;;1796:30;-1:-1:-1;;;1842:18:21;;;1835:46;597:12:19;;;;1898:18:21;;597:32:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:32:19;;;;;;;;;;;;:::i;:::-;571:58;;;;;;;;;;;;:::i;:::-;;123:2395;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;123:2395:19;;;-1:-1:-1;123:2395:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;358:127:21;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:1087;570:6;601:2;644;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;687:16;;-1:-1:-1;;;;;752:14:21;;;749:34;;;779:1;776;769:12;749:34;817:6;806:9;802:22;792:32;;862:7;855:4;851:2;847:13;843:27;833:55;;884:1;881;874:12;833:55;913:2;907:9;935:2;931;928:10;925:36;;;941:18;;:::i;:::-;1016:2;1010:9;984:2;1070:13;;-1:-1:-1;;1066:22:21;;;1090:2;1062:31;1058:40;1046:53;;;1114:18;;;1134:22;;;1111:46;1108:72;;;1160:18;;:::i;:::-;1200:10;1196:2;1189:22;1235:2;1227:6;1220:18;1275:7;1270:2;1265;1261;1257:11;1253:20;1250:33;1247:53;;;1296:1;1293;1286:12;1247:53;1318:1;1309:10;;1328:129;1342:2;1339:1;1336:9;1328:129;;;1430:10;;;1426:19;;1420:26;1399:14;;;1395:23;;1388:59;1353:10;;;;1328:129;;;1475:2;1472:1;1469:9;1466:80;;;1534:1;1529:2;1524;1516:6;1512:15;1508:24;1501:35;1466:80;1565:6;490:1087;-1:-1:-1;;;;;;;;490:1087:21:o;1927:380::-;2006:1;2002:12;;;;2049;;;2070:61;;2124:4;2116:6;2112:17;2102:27;;2070:61;2177:2;2169:6;2166:14;2146:18;2143:38;2140:161;;;2223:10;2218:3;2214:20;2211:1;2204:31;2258:4;2255:1;2248:15;2286:4;2283:1;2276:15;2140:161;;1927:380;;;:::o;:::-;123:2395:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630a9254e41461005c5780631236ea1d1461006657806363765c1a1461006e578063ba414fa614610076578063fa7626d414610092575b600080fd5b61006461009f565b005b610064610191565b6100646104fa565b61007e61077f565b604051901515815260200160405180910390f35b60005461007e9060ff1681565b604051630637469360e31b8152600080516020610d08833981519152906331ba3498906100d190601590600401610acc565b6020604051808303816000875af11580156100f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101149190610b74565b601355604051630637469360e31b8152600080516020610d08833981519152906331ba34989061014990601690600401610acc565b6020604051808303816000875af1158015610168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018c9190610b74565b601455565b601354604051639ebf682760e01b81526004810191909152600080516020610d0883398151915290639ebf682790602401600060405180830381600087803b1580156101dc57600080fd5b505af11580156101f0573d6000803e3d6000fd5b50505050600060405161020290610ac0565b604051809103906000f08015801561021e573d6000803e3d6000fd5b506040516360fe47b160e01b8152606460048201529091506001600160a01b038216906360fe47b190602401600060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b505050506102e8816001600160a01b0316633fa4f2456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e19190610b74565b606461089e565b604051632bf116ef60e11b81526001600160a01b0382166004820152600080516020610d08833981519152906357e22dde90602401600060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b505060405163d92d8efd60e01b81526001600160a01b0384166004820152600080516020610d08833981519152925063d92d8efd9150602401602060405180830381865afa1580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c59190610b8d565b6103d1576103d1610bb6565b601454604051639ebf682760e01b81526004810191909152600080516020610d0883398151915290639ebf682790602401600060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505060405163d92d8efd60e01b81526001600160a01b0384166004820152600080516020610d08833981519152925063d92d8efd9150602401602060405180830381865afa158015610486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104aa9190610b8d565b6104b6576104b6610bb6565b6104f7816001600160a01b0316633fa4f2456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bd573d6000803e3d6000fd5b50565b601354604051639ebf682760e01b81526004810191909152600080516020610d0883398151915290639ebf682790602401600060405180830381600087803b15801561054557600080fd5b505af1158015610559573d6000803e3d6000fd5b505050506105ed7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316632f103f226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190610b74565b60135461089e565b60006040516105fb90610ac0565b604051809103906000f080158015610617573d6000803e3d6000fd5b506040516360fe47b160e01b8152606460048201529091506001600160a01b038216906360fe47b190602401600060405180830381600087803b15801561065d57600080fd5b505af1158015610671573d6000803e3d6000fd5b505050506106b6816001600160a01b0316633fa4f2456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bd573d6000803e3d6000fd5b601454604051639ebf682760e01b81526004810191909152600080516020610d0883398151915290639ebf682790602401600060405180830381600087803b15801561070157600080fd5b505af1158015610715573d6000803e3d6000fd5b50505050806001600160a01b0316633fa4f2456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b9190610b74565b5050565b60008054610100900460ff161561079f5750600054610100900460ff1690565b6000600080516020610d088339815191523b156108995760408051600080516020610d08833981519152602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610821917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610c07565b60408051601f198184030181529082905261083b91610c2b565b6000604051808303816000865af19150503d8060008114610878576040519150601f19603f3d011682016040523d82523d6000602084013e61087d565b606091505b50915050808060200190518101906108959190610b8d565b9150505b919050565b80821461077b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161090f9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161077b600080516020610d088339815191523b15610aaf5760408051600080516020610d08833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610a4e9291602001610c07565b60408051601f1981840301815290829052610a6891610c2b565b6000604051808303816000865af19150503d8060008114610aa5576040519150601f19603f3d011682016040523d82523d6000602084013e610aaa565b606091505b505050505b6000805461ff001916610100179055565b60d080610c3883390190565b600060208083526000845481600182811c915080831680610aee57607f831692505b858310811415610b0c57634e487b7160e01b85526022600452602485fd5b878601838152602001818015610b295760018114610b3a57610b65565b60ff19861682528782019650610b65565b60008b81526020902060005b86811015610b5f57815484820152908501908901610b46565b83019750505b50949998505050505050505050565b600060208284031215610b8657600080fd5b5051919050565b600060208284031215610b9f57600080fd5b81518015158114610baf57600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000815160005b81811015610bed5760208185018101518683015201610bd3565b81811115610bfc576000828601525b509290920192915050565b6001600160e01b0319831681526000610c236004830184610bcc565b949350505050565b6000610baf8284610bcc56fe608060405234801561001057600080fd5b5060b18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80633fa4f24514603757806360fe47b1146051575b600080fd5b603f60005481565b60405190815260200160405180910390f35b6061605c3660046063565b600055565b005b600060208284031215607457600080fd5b503591905056fea26469706673582212208dc5fd77e794ad8a6cf08f257b52b17e6cf9ec8f4db37d27e78cdd67dba757b164736f6c634300080a00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220429c56061b81820e21fa87bfca7f02bb454b1c8e271180d3c419893b6458cb1b64736f6c634300080a0033",
    "sourceMap": "123:2395:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:141;;;:::i;:::-;;1882:634;;;:::i;885:925::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:21;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;1572:26;;;;;;;;;685:141:19;733:30;;-1:-1:-1;;;733:30:19;;-1:-1:-1;;;;;;;;;;;733:13:19;;;:30;;747:15;;733:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:11;:44;788:31;;-1:-1:-1;;;788:31:19;;-1:-1:-1;;;;;;;;;;;788:13:19;;;:31;;802:16;;788:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;773:12;:46;685:141::o;1882:634::-;1953:11;;1939:26;;-1:-1:-1;;;1939:26:19;;;;;2013:25:21;;;;-1:-1:-1;;;;;;;;;;;1939:13:19;;;1986:18:21;;1939:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:28;2006:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2043:15:19;;-1:-1:-1;;;2043:15:19;;2054:3;2043:15;;;2013:25:21;1975:58:19;;-1:-1:-1;;;;;;2043:10:19;;;;;1986:18:21;;2043:15:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2068:29;2077:6;-1:-1:-1;;;;;2077:12:19;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2093:3;2068:8;:29::i;:::-;2203:34;;-1:-1:-1;;;2203:34:19;;-1:-1:-1;;;;;2405:32:21;;2203:34:19;;;2387:51:21;-1:-1:-1;;;;;;;;;;;2203:17:19;;;2360:18:21;;2203:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2254:32:19;;-1:-1:-1;;;2254:32:19;;-1:-1:-1;;;;;2405:32:21;;2254::19;;;2387:51:21;-1:-1:-1;;;;;;;;;;;2254:15:19;-1:-1:-1;2254:15:19;;-1:-1:-1;2360:18:21;;2254:32:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2247:40;;;;:::i;:::-;2312:12;;2298:27;;-1:-1:-1;;;2298:27:19;;;;;2013:25:21;;;;-1:-1:-1;;;;;;;;;;;2298:13:19;;;1986:18:21;;2298:27:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2342:32:19;;-1:-1:-1;;;2342:32:19;;-1:-1:-1;;;;;2405:32:21;;2342::19;;;2387:51:21;-1:-1:-1;;;;;;;;;;;2342:15:19;-1:-1:-1;2342:15:19;;-1:-1:-1;2360:18:21;;2342:32:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2335:40;;;;:::i;:::-;2480:29;2489:6;-1:-1:-1;;;;;2489:12:19;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:29;1929:587;1882:634::o;885:925::-;946:11;;932:26;;-1:-1:-1;;;932:26:19;;;;;2013:25:21;;;;-1:-1:-1;;;;;;;;;;;932:13:19;;;1986:18:21;;932:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;968:38;317:28:1;309:37;;-1:-1:-1;;;;;977:13:19;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;994:11;;968:8;:38::i;:::-;1083:28;1114:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1189:15:19;;-1:-1:-1;;;1189:15:19;;1200:3;1189:15;;;2013:25:21;1083:58:19;;-1:-1:-1;;;;;;1189:10:19;;;;;1986:18:21;;1189:15:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:29;1223:6;-1:-1:-1;;;;;1223:12:19;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:29;1403:12;;1389:27;;-1:-1:-1;;;1389:27:19;;;;;2013:25:21;;;;-1:-1:-1;;;;;;;;;;;1389:13:19;;;1986:18:21;;1389:27:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1789:6;-1:-1:-1;;;;;1789:12:19;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;922:888;885:925::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;3037:51:21;;;-1:-1:-1;;;3104:18:21;;;3097:34;2196:43:0;;;;;;;;;3010:18:21;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;4162:2:21;4144:21;;;4201:2;4181:18;;;4174:30;4240:34;4235:2;4220:18;;4213:62;-1:-1:-1;;;4306:2:21;4291:18;;4284:32;4348:3;4333:19;;3960:398;5286:41:0;;;;;;;;5346:31;;;4575:21:21;;;4632:2;4612:18;;;4605:30;-1:-1:-1;;;4666:2:21;4651:18;;4644:40;4751:4;4736:20;;4729:36;;;5346:31:0;;;;;;;4716:3:21;5346:31:0;;;5396;;;4988:21:21;;;5045:2;5025:18;;;5018:30;-1:-1:-1;;;5079:2:21;5064:18;;5057:40;5164:4;5149:20;;5142:36;;;5396:31:0;;;;;;;5129:3:21;5396:31:0;;;5441:6;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;5391:51:21;;;-1:-1:-1;;;5458:18:21;;;5451:34;;;;2705:4:0;5501:18:21;;;5494:34;2482:11:0;;1671:64;2579:43;;5364:18:21;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;487:1186:21:-;596:4;625:2;654;643:9;636:21;677:1;710:6;704:13;740:3;762:1;790:9;786:2;782:18;772:28;;850:2;839:9;835:18;872;862:61;;916:4;908:6;904:17;894:27;;862:61;969:2;961:6;958:14;938:18;935:38;932:165;;;-1:-1:-1;;;996:33:21;;1052:4;1049:1;1042:15;1082:4;1003:3;1070:17;932:165;1153:18;;;293:19;;;345:4;336:14;1196:18;1223:100;;;;1337:1;1332:315;;;;1189:458;;1223:100;-1:-1:-1;;1256:24:21;;1244:37;;1301:12;;;;-1:-1:-1;1223:100:21;;1332:315;434:1;427:14;;;471:4;458:18;;1427:1;1441:165;1455:6;1452:1;1449:13;1441:165;;;1533:14;;1520:11;;;1513:35;1576:16;;;;1470:10;;1441:165;;;1626:11;;;-1:-1:-1;;1189:458:21;-1:-1:-1;1664:3:21;;487:1186;-1:-1:-1;;;;;;;;;487:1186:21:o;1678:184::-;1748:6;1801:2;1789:9;1780:7;1776:23;1772:32;1769:52;;;1817:1;1814;1807:12;1769:52;-1:-1:-1;1840:16:21;;1678:184;-1:-1:-1;1678:184:21:o;2449:277::-;2516:6;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;2617:9;2611:16;2670:5;2663:13;2656:21;2649:5;2646:32;2636:60;;2692:1;2689;2682:12;2636:60;2715:5;2449:277;-1:-1:-1;;;2449:277:21:o;2731:127::-;2792:10;2787:3;2783:20;2780:1;2773:31;2823:4;2820:1;2813:15;2847:4;2844:1;2837:15;3142:336;3183:3;3221:5;3215:12;3245:1;3255:128;3269:6;3266:1;3263:13;3255:128;;;3366:4;3351:13;;;3347:24;;3341:31;3328:11;;;3321:52;3284:12;3255:128;;;3401:6;3398:1;3395:13;3392:48;;;3436:1;3427:6;3422:3;3418:16;3411:27;3392:48;-1:-1:-1;3456:16:21;;;;;3142:336;-1:-1:-1;;3142:336:21:o;3483:278::-;-1:-1:-1;;;;;;3668:33:21;;3656:46;;3638:3;3718:37;3752:1;3743:11;;3735:6;3718:37;:::i;:::-;3711:44;3483:278;-1:-1:-1;;;;3483:278:21:o;3766:189::-;3895:3;3920:29;3945:3;3937:6;3920:29;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCreateContract()": "63765c1a",
    "testCreatePersistentContract()": "1236ea1d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreateContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreatePersistentContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ForkTest2.t.sol\":\"ForkTest2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"src/SimpleStorage.sol\":{\"keccak256\":\"0xe27902e785eaf5278231061b011076ff5545886a7ba1fee1e196662f06cbfa6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e40d4379506cd9a823b637dd09abc99cb70104d04e318273469a04a5b1b5aea\",\"dweb:/ipfs/QmSzpK4Z4o14Rgkr1K7UG9qcpUuME31nbYLMaLSuqAsx5Z\"]},\"test/ForkTest2.t.sol\":{\"keccak256\":\"0x572973b374c5671bada13a3b500beb4b629a776387be8838cc5cfb4ea41fef52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d128d925f32d34d5e7f20963d43534e3f255ccec36b33a05ce889a37b9930e8\",\"dweb:/ipfs/QmRK33nvTfBACbZfBYVSBK6WCk5rxeAGdrWtsRUQ5E7524\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreateContract"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreatePersistentContract"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ForkTest2.t.sol": "ForkTest2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "src/SimpleStorage.sol": {
        "keccak256": "0xe27902e785eaf5278231061b011076ff5545886a7ba1fee1e196662f06cbfa6e",
        "urls": [
          "bzz-raw://4e40d4379506cd9a823b637dd09abc99cb70104d04e318273469a04a5b1b5aea",
          "dweb:/ipfs/QmSzpK4Z4o14Rgkr1K7UG9qcpUuME31nbYLMaLSuqAsx5Z"
        ],
        "license": "MIT"
      },
      "test/ForkTest2.t.sol": {
        "keccak256": "0x572973b374c5671bada13a3b500beb4b629a776387be8838cc5cfb4ea41fef52",
        "urls": [
          "bzz-raw://4d128d925f32d34d5e7f20963d43534e3f255ccec36b33a05ce889a37b9930e8",
          "dweb:/ipfs/QmRK33nvTfBACbZfBYVSBK6WCk5rxeAGdrWtsRUQ5E7524"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ForkTest2.t.sol",
    "id": 465,
    "exportedSymbols": {
      "DSTest": [
        2380
      ],
      "ForkTest2": [
        464
      ],
      "SimpleStorageContract": [
        39
      ],
      "StdAssertions": [
        3265
      ],
      "StdChains": [
        3801
      ],
      "StdCheats": [
        5738
      ],
      "StdStorage": [
        6645
      ],
      "StdUtils": [
        8710
      ],
      "Test": [
        593
      ],
      "TestBase": [
        2437
      ],
      "Vm": [
        9867
      ],
      "console": [
        17931
      ],
      "console2": [
        26027
      ],
      "stdError": [
        5804
      ],
      "stdJson": [
        6471
      ],
      "stdMath": [
        6613
      ],
      "stdStorage": [
        8079
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:2486:19",
    "nodes": [
      {
        "id": 303,
        "nodeType": "PragmaDirective",
        "src": "33:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 304,
        "nodeType": "ImportDirective",
        "src": "58:28:19",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 465,
        "sourceUnit": 594,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 305,
        "nodeType": "ImportDirective",
        "src": "87:34:19",
        "nodes": [],
        "absolutePath": "src/SimpleStorage.sol",
        "file": "../src/SimpleStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 465,
        "sourceUnit": 40,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 464,
        "nodeType": "ContractDefinition",
        "src": "123:2395:19",
        "nodes": [
          {
            "id": 309,
            "nodeType": "VariableDeclaration",
            "src": "192:19:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "200:11:19",
            "scope": 464,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 308,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 311,
            "nodeType": "VariableDeclaration",
            "src": "217:20:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimismFork",
            "nameLocation": "225:12:19",
            "scope": 464,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 310,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 317,
            "nodeType": "VariableDeclaration",
            "src": "509:56:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "516:15:19",
            "scope": 464,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 312,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "509:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 315,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "547:17:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 313,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2430,
                  "src": "534:2:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$9867",
                    "typeString": "contract Vm"
                  }
                },
                "id": 314,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 8834,
                "src": "534:12:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 316,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "534:31:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 323,
            "nodeType": "VariableDeclaration",
            "src": "571:58:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OPTIMISM_RPC_URL",
            "nameLocation": "578:16:19",
            "scope": 464,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 318,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "571:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f5054494d49534d5f5250435f55524c",
                  "id": 321,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "610:18:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_70d2e499348a0700cbb50cc3c722870aca6932aaa7b84eed2b7870dd43a4360a",
                    "typeString": "literal_string \"OPTIMISM_RPC_URL\""
                  },
                  "value": "OPTIMISM_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_70d2e499348a0700cbb50cc3c722870aca6932aaa7b84eed2b7870dd43a4360a",
                    "typeString": "literal_string \"OPTIMISM_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 319,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2430,
                  "src": "597:2:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$9867",
                    "typeString": "contract Vm"
                  }
                },
                "id": 320,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 8834,
                "src": "597:12:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 322,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "597:32:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 341,
            "nodeType": "FunctionDefinition",
            "src": "685:141:19",
            "nodes": [],
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "709:117:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 326,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "719:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 329,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "747:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 327,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2430,
                          "src": "733:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$9867",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9735,
                        "src": "733:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "733:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "719:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "719:44:19"
                },
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 333,
                      "name": "optimismFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "773:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 336,
                          "name": "OPTIMISM_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "802:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 334,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2430,
                          "src": "788:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$9867",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9735,
                        "src": "788:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "788:31:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "773:46:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "773:46:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "694:5:19",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:2:19"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:19"
            },
            "scope": 464,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 390,
            "nodeType": "FunctionDefinition",
            "src": "885:925:19",
            "nodes": [],
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "922:888:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 347,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "946:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 344,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "932:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9867",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "932:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "932:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "932:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 351,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "977:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$9867",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeFork",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9780,
                          "src": "977:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "977:15:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 354,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "994:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 350,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2568,
                        2593,
                        2606,
                        2622,
                        2664,
                        2706,
                        2748,
                        2785,
                        2822,
                        2859,
                        914,
                        939,
                        969,
                        994,
                        1053,
                        1078,
                        1108,
                        1133,
                        2233,
                        2268
                      ],
                      "referencedDeclaration": 1108,
                      "src": "968:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "968:38:19"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "simple",
                      "nameLocation": "1105:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "1083:28:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                        "typeString": "contract SimpleStorageContract"
                      },
                      "typeName": {
                        "id": 358,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 357,
                          "name": "SimpleStorageContract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39,
                          "src": "1083:21:19"
                        },
                        "referencedDeclaration": 39,
                        "src": "1083:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 364,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1114:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleStorageContract_$39_$",
                        "typeString": "function () returns (contract SimpleStorageContract)"
                      },
                      "typeName": {
                        "id": 361,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 360,
                          "name": "SimpleStorageContract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39,
                          "src": "1118:21:19"
                        },
                        "referencedDeclaration": 39,
                        "src": "1118:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                      "typeString": "contract SimpleStorageContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1083:58:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1200:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 365,
                        "name": "simple",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "1189:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "1189:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:15:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 372,
                            "name": "simple",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "1223:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                              "typeString": "contract SimpleStorageContract"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "1223:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1223:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 371,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2568,
                        2593,
                        2606,
                        2622,
                        2664,
                        2706,
                        2748,
                        2785,
                        2822,
                        2859,
                        914,
                        939,
                        969,
                        994,
                        1053,
                        1078,
                        1108,
                        1133,
                        2233,
                        2268
                      ],
                      "referencedDeclaration": 1108,
                      "src": "1214:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "optimismFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "1403:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 378,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "1389:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9867",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "1389:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1389:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "1389:27:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 384,
                        "name": "simple",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "1789:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "1789:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:14:19"
                }
              ]
            },
            "functionSelector": "63765c1a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreateContract",
            "nameLocation": "894:18:19",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:2:19"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:0:19"
            },
            "scope": 464,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 463,
            "nodeType": "FunctionDefinition",
            "src": "1882:634:19",
            "nodes": [],
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "1929:587:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 396,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "1953:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 393,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "1939:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9867",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "1939:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:26:19"
                },
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "simple",
                      "nameLocation": "1997:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "1975:28:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                        "typeString": "contract SimpleStorageContract"
                      },
                      "typeName": {
                        "id": 400,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 399,
                          "name": "SimpleStorageContract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39,
                          "src": "1975:21:19"
                        },
                        "referencedDeclaration": 39,
                        "src": "1975:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2006:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleStorageContract_$39_$",
                        "typeString": "function () returns (contract SimpleStorageContract)"
                      },
                      "typeName": {
                        "id": 403,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 402,
                          "name": "SimpleStorageContract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39,
                          "src": "2010:21:19"
                        },
                        "referencedDeclaration": 39,
                        "src": "2010:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                      "typeString": "contract SimpleStorageContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1975:58:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2054:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 407,
                        "name": "simple",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "2043:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                          "typeString": "contract SimpleStorageContract"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "2043:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:15:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 414,
                            "name": "simple",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "2077:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                              "typeString": "contract SimpleStorageContract"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "2077:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2077:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2093:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 413,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2568,
                        2593,
                        2606,
                        2622,
                        2664,
                        2706,
                        2748,
                        2785,
                        2822,
                        2859,
                        914,
                        939,
                        969,
                        994,
                        1053,
                        1078,
                        1108,
                        1133,
                        2233,
                        2268
                      ],
                      "referencedDeclaration": 1108,
                      "src": "2068:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 425,
                            "name": "simple",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "2229:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                              "typeString": "contract SimpleStorageContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                              "typeString": "contract SimpleStorageContract"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2221:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2221:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2221:15:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 420,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "2203:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9867",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makePersistent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9809,
                      "src": "2203:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 434,
                                "name": "simple",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 401,
                                "src": "2278:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                                  "typeString": "contract SimpleStorageContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                                  "typeString": "contract SimpleStorageContract"
                                }
                              ],
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2270:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 432,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2270:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2270:15:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 430,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "2254:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$9867",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isPersistent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9849,
                          "src": "2254:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:32:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 429,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2247:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "optimismFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "2312:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 439,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "2298:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9867",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9774,
                      "src": "2298:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:27:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 450,
                                "name": "simple",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 401,
                                "src": "2366:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                                  "typeString": "contract SimpleStorageContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                                  "typeString": "contract SimpleStorageContract"
                                }
                              ],
                              "id": 449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2358:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 448,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2358:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2358:15:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 446,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "2342:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$9867",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isPersistent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9849,
                          "src": "2342:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2342:32:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 445,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2335:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2335:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "2335:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 456,
                            "name": "simple",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "2489:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleStorageContract_$39",
                              "typeString": "contract SimpleStorageContract"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "2489:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2489:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2505:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 455,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2568,
                        2593,
                        2606,
                        2622,
                        2664,
                        2706,
                        2748,
                        2785,
                        2822,
                        2859,
                        914,
                        939,
                        969,
                        994,
                        1053,
                        1078,
                        1108,
                        1133,
                        2233,
                        2268
                      ],
                      "referencedDeclaration": 1108,
                      "src": "2480:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2480:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:29:19"
                }
              ]
            },
            "functionSelector": "1236ea1d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreatePersistentContract",
            "nameLocation": "1891:28:19",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:2:19"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:0:19"
            },
            "scope": 464,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 306,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 593,
              "src": "145:4:19"
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "145:4:19"
          }
        ],
        "canonicalName": "ForkTest2",
        "contractDependencies": [
          39
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          464,
          593,
          2437,
          2434,
          8710,
          5738,
          5349,
          3801,
          3265,
          2380
        ],
        "name": "ForkTest2",
        "nameLocation": "132:9:19",
        "scope": 465,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}